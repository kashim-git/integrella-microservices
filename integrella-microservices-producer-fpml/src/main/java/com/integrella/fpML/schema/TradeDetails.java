//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.04.26 at 04:37:38 PM BST 
//


package com.integrella.fpML.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;


/**
 * Summary trade economic details used to help identify a trade where no shared trade ID is available.
 * 
 * <p>Java class for TradeDetails complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TradeDetails">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="tradeDate" type="{http://www.fpml.org/FpML-5/master}IdentifiedDate" minOccurs="0"/>
 *         &lt;element name="clearedDate" type="{http://www.fpml.org/FpML-5/master}IdentifiedDate" minOccurs="0"/>
 *         &lt;element name="effectiveDate" type="{http://www.fpml.org/FpML-5/master}AdjustableDate2" minOccurs="0"/>
 *         &lt;element name="terminationDate" type="{http://www.fpml.org/FpML-5/master}AdjustableDate2" minOccurs="0"/>
 *         &lt;group ref="{http://www.fpml.org/FpML-5/master}Product.model" minOccurs="0"/>
 *         &lt;element name="underlyer" type="{http://www.fpml.org/FpML-5/master}TradeUnderlyer" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="notional" type="{http://www.fpml.org/FpML-5/master}CashflowNotional" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TradeDetails", propOrder = {
    "content"
})
public class TradeDetails {

    @XmlElementRefs({
        @XmlElementRef(name = "secondaryAssetClass", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "productId", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "notional", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "clearedDate", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "productType", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "tradeDate", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "effectiveDate", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "terminationDate", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "underlyer", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "assetClass", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "primaryAssetClass", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "embeddedOptionType", namespace = "http://www.fpml.org/FpML-5/master", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> content;

    /**
     * Gets the rest of the content model. 
     * 
     * <p>
     * You are getting this "catch-all" property because of the following reason: 
     * The field name "ProductId" is used by two different parts of a schema. See: 
     * line 6635 of file:/C:/DEV/git/integrella/integrella-microservices-producer-fpml/src/main/xsd/schema/fpml-shared.xsd
     * line 6629 of file:/C:/DEV/git/integrella/integrella-microservices-producer-fpml/src/main/xsd/schema/fpml-shared.xsd
     * <p>
     * To get rid of this property, apply a property customization to one 
     * of both of the following declarations to change their names: 
     * Gets the value of the content property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the content property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link AssetClass }{@code >}
     * {@link JAXBElement }{@code <}{@link ProductId }{@code >}
     * {@link JAXBElement }{@code <}{@link CashflowNotional }{@code >}
     * {@link JAXBElement }{@code <}{@link IdentifiedDate }{@code >}
     * {@link JAXBElement }{@code <}{@link ProductType }{@code >}
     * {@link JAXBElement }{@code <}{@link IdentifiedDate }{@code >}
     * {@link JAXBElement }{@code <}{@link AdjustableDate2 }{@code >}
     * {@link JAXBElement }{@code <}{@link AdjustableDate2 }{@code >}
     * {@link JAXBElement }{@code <}{@link TradeUnderlyer }{@code >}
     * {@link JAXBElement }{@code <}{@link AssetClass }{@code >}
     * {@link JAXBElement }{@code <}{@link AssetClass }{@code >}
     * {@link JAXBElement }{@code <}{@link EmbeddedOptionType }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getContent() {
        if (content == null) {
            content = new ArrayList<JAXBElement<?>>();
        }
        return this.content;
    }

}
